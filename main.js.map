{"version":3,"sources":["./src/environments/environment.ts","./src/app/shared/pipes/format-name/format-name.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/components/button/button.component.ts","./src/app/shared/components/button/button.component.html","./src/app/app.module.ts","./src/app/shared/components/input-number/input-number.component.ts","./src/app/shared/components/input-number/input-number.component.html","./src/app/shared/components/input-text/input-text.component.ts","./src/app/shared/components/input-text/input-text.component.html","./src/app/shared/pipes/only-letters/only-letters.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatName'\n})\nexport class FormatNamePipe implements PipeTransform {\n\n  transform(value: string): string {\n    value = value.replace(/[\\u0300-\\u036f]/g, '');\n    value = this.capitalize(value);\n    let names = this.separateNames(value);\n\n    if (names.length === 1) {\n      return this.firstName(names).toUpperCase();\n    }\n\n    names = this.checkLastPartName(names);\n    value = this.formatName(names);\n    return this.nameToLowerCase(value);\n  }\n\n  capitalize(name: string): string {\n    return name\n      .toLowerCase()\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n\n  lastName(names: string[]): string {\n    return (names.slice(-1)[0]);\n  }\n\n  penultimateName(names: string[]): string {\n    return (names.slice(-2)[0]);\n  }\n\n  firstName(names: string[]): string {\n    return names[0];\n  }\n\n  separateNames(separateNames: string): Array<string> {\n    return separateNames.split(' ');\n  }\n\n  checkLastPartName(names: string[]): string[] {\n    if ((this.lastName(names).toLowerCase() === 'filho' ||\n      this.lastName(names).toLowerCase() === 'filha' ||\n      this.lastName(names).toLowerCase() === 'neto' ||\n      this.lastName(names).toLowerCase() === 'neta' ||\n      this.lastName(names).toLowerCase() === 'sobrinho' ||\n      this.lastName(names).toLowerCase() === 'sobrinha' ||\n      this.lastName(names).toLowerCase() === 'junior')\n      && names.length > 2) {\n\n      names.unshift(this.lastName(names).toUpperCase() + ',');\n      names.pop();\n      return names;\n    }\n\n    // Insere a vírgula no último elemento da posição e deixa em letras maísculas.\n    names.slice(-1)[0] = this.lastName(names).toUpperCase() + ',';\n    return names;\n  }\n\n  formatName(names: string[]): string {\n    // Adiciona a vírgula caso não exista.\n    let lastName = this.lastName(names).toUpperCase();\n    if (!names.join(' ').includes(',')) {\n      lastName += ',';\n    }\n\n    names.unshift(lastName);\n    names.pop();\n    return names.join(' ');\n  }\n\n  nameToLowerCase(name: string): string {\n    const auxName = name;\n    name = '';\n\n    this.separateNames(auxName).map((word: string) => {\n      if (word === 'De' || word === 'Da' || word === 'Do' || word === 'Das' || word === 'Dos') {\n        name += ' ' + word.toLowerCase();\n      } else {\n        name += ' ' + word;\n      }\n    }).join(' ');\n\n    // Elimina o espaço na frente do primeiro caractere\n    return name.substring(1);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { OnlyLettersPipe } from './shared/pipes/only-letters/only-letters.pipe';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n\n  authorForm: FormGroup = this.fb.group({\n    totalAuthors: [0, [this.isTotalAuthorValid]],\n  });\n\n  onlyNumber: OnlyLettersPipe = new OnlyLettersPipe();\n  showFormattedNames = false;\n  namesPrint: string[] = [];\n\n  constructor(private fb: FormBuilder) { }\n\n  addControlFormGroup(): void {\n    if (this.authorForm.value.totalAuthors > 50) {\n      this.authorForm.controls.totalAuthors.setValue(50);\n    } else {\n      this.authorForm.addControl('author' + this.authorForm.value.totalAuthors, new FormControl('', Validators.required));\n    }\n  }\n\n  removeControlFormGroup(): void {\n    this.authorForm.removeControl('author' + this.authorForm.value.totalAuthors);\n  }\n\n  isTotalAuthorValid(control: AbstractControl): object | null {\n    return control.value === 0 || control.value === null ? { invalid: true } : null;\n  }\n\n  hasErrorInputNumber(): boolean {\n    return this.authorForm.controls.totalAuthors.invalid &&\n      (this.authorForm.controls.totalAuthors.touched ||\n        this.authorForm.controls.totalAuthors.dirty) ? true : false;\n  }\n\n  hasErrorInputText(index: number): boolean {\n    return this.authorForm.controls['author' + (index + 1)] &&\n      this.authorForm.controls['author' + (index + 1)].invalid &&\n      (this.authorForm.controls['author' + (index + 1)].touched ||\n        this.authorForm.controls['author' + (index + 1)].dirty) ? true : false;\n  }\n\n  checkTypedInputText(value: any, controlName: string): void {\n    this.authorForm.controls[controlName].setValue(this.onlyNumber.transform(value));\n  }\n\n  sendData(): void {\n    this.namesPrint = [];\n    Object.keys(this.authorForm.controls)\n      .filter((author: string) => author.includes('author'))\n      .map((author: string) => {\n        this.namesPrint.push(this.authorForm.controls[author].value);\n      });\n\n    this.showFormattedNames = true;\n  }\n\n  reset(): void {\n    this.authorForm.reset();\n    this.authorForm.controls.totalAuthors.setValue(0);\n\n    Object.keys(this.authorForm.controls)\n      .filter((author: string) => author.includes('author'))\n      .map((author: string) => {\n        this.authorForm.removeControl(author);\n      });\n\n    this.showFormattedNames = false;\n  }\n\n}\n","<main>\n\n  <ng-container *ngIf=\"!showFormattedNames\">\n    <h1>obras bibliográficas</h1>\n\n    <form [formGroup]=\"authorForm\">\n\n      <app-input-number formControlName=\"totalAuthors\" label=\"1. marque a quantidade de autores\"\n        (subtractBtn)=\"removeControlFormGroup()\" (addBtn)=\"addControlFormGroup()\" [error]=\"hasErrorInputNumber()\">\n      </app-input-number>\n\n      <ng-container *ngIf=\"authorForm.value.totalAuthors\">\n        <label>2. preencha os nomes dos autores</label>\n        <div class=\"container-authors-input\">\n\n          <ng-container *ngFor=\"let item of [].constructor(authorForm.value.totalAuthors); let i = index\">\n            <app-input-text *ngIf=\"authorForm.value.totalAuthors > 0\" [label]=\"(i+1)+'º autor'\" [id]=\"(i+1)+'-author'\"\n              [formControlName]=\"'author'+(i+1)\" [error]=\"hasErrorInputText(i)\" #inputText\n              (keyup)=\"checkTypedInputText(inputText.value, 'author'+(i+1))\">\n            </app-input-text>\n          </ng-container>\n\n        </div>\n      </ng-container>\n\n      <app-button *ngIf=\"authorForm.value.totalAuthors\" [disabled]=\"authorForm.invalid\" (click)=\"sendData()\">\n        formatar nomes\n      </app-button>\n    </form>\n  </ng-container>\n\n\n  <ng-container *ngIf=\"showFormattedNames\">\n    <h1>nomes formatados</h1>\n    <div class=\"container-formatted-names\">\n      <label class=\"container-formatted-names__label\" *ngFor=\"let item of namesPrint; let i = index\">\n        {{ (i+1) +'. ' + (item | formatName) }}\n      </label>\n    </div>\n    <app-button (click)=\"reset()\">voltar</app-button>\n  </ng-container>\n\n</main>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n\n  @Input()\n  disabled = false;\n\n}\n","<button class=\"btn\" [ngClass]=\"{'btn--disabled': disabled}\" [disabled]=\"disabled\">\n  <ng-content></ng-content>\n</button>\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ButtonComponent } from './shared/components/button/button.component';\nimport { InputNumberComponent } from './shared/components/input-number/input-number.component';\nimport { InputTextComponent } from './shared/components/input-text/input-text.component';\nimport { FormatNamePipe } from './shared/pipes/format-name/format-name.pipe';\nimport { OnlyLettersPipe } from './shared/pipes/only-letters/only-letters.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n    InputNumberComponent,\n    InputTextComponent,\n    FormatNamePipe,\n    OnlyLettersPipe,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, Output, EventEmitter, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Pallete } from 'src/assets/scss/pallete.enum';\n\n@Component({\n  selector: 'app-input-number',\n  templateUrl: './input-number.component.html',\n  styleUrls: ['./input-number.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputNumberComponent),\n      multi: true,\n    },\n  ],\n})\n\nexport class InputNumberComponent implements ControlValueAccessor {\n\n  @Input()\n  error = false;\n\n  @Input()\n  label = '';\n\n  @Output()\n  subtractBtn = new EventEmitter<void>();\n\n  @Output()\n  addBtn = new EventEmitter<void>();\n\n  counter = 0;\n\n  onChangeCb: (counter: number) => void = () => { };\n  onTouchedCb: (counter: number) => void = () => { };\n\n\n  writeValue(counter: number): void {\n    this.counter = counter;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCb = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCb = fn;\n  }\n\n  add(): void {\n    this.counter++;\n    this.onChangeCb(this.counter);\n    this.onTouchedCb(this.counter);\n    this.addBtn.emit();\n  }\n\n  subtract(): void {\n    this.counter--;\n    this.onChangeCb(this.counter);\n    this.onTouchedCb(this.counter);\n    this.subtractBtn.emit();\n  }\n\n}\n","<div class=\"container-input\">\n  <label class=\"container-input__label\">\n    {{ label }}\n  </label>\n\n  <div class=\"container-input__btns flex-center\">\n    <button class=\"container-input__btn flex-center-center\" [disabled]=\"!counter\" (click)=\"subtract();\">\n      <div>-</div>\n    </button>\n\n    <div class=\"container-input__counter\">\n      <label class=\"container-input__counter-label flex-center-center\"\n        [ngClass]=\"{'container-input__counter-label--invalid': error}\">\n        {{ counter }}\n      </label>\n    </div>\n\n    <button class=\"container-input__btn flex-center-center\" (click)=\"add();\">\n      <div>+</div>\n    </button>\n  </div>\n</div>\n","import { Input } from '@angular/core';\nimport { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-text',\n  templateUrl: './input-text.component.html',\n  styleUrls: ['./input-text.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputTextComponent),\n      multi: true,\n    },\n  ],\n})\nexport class InputTextComponent implements ControlValueAccessor {\n\n  @Input()\n  label = '';\n\n  @Input()\n  id = '';\n\n  @Input()\n  error = false;\n\n  value = '';\n\n  onChangeCb: (value: string) => void = () => { };\n  onTouchedCb: (value: string) => void = () => { };\n\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCb = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCb = fn;\n  }\n\n  typedValue(value: string): void {\n    this.value = value;\n    this.onChangeCb(this.value);\n    this.onTouchedCb(this.value);\n  }\n\n}\n","<label [for]=\"id\">{{ label }}</label>\n\n<input type=\"text\"\n[ngModel]=\"value\"\n(ngModelChange)=\"typedValue($event)\"\n[id]=\"id\"\n[name]=\"id\"\n[ngClass]=\"{'invalid': error}\"\n/>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'onlyLetters'\n})\nexport class OnlyLettersPipe implements PipeTransform {\n\n  transform(value: any): string {\n    return value.replace(/[^a-zA-Z\\u00C0-\\u00FF ]+/g, '');\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}